services:
  postgres:
    image: postgres
    container_name: ${POSTGRES_HOST}
    restart: always
    env_file:
      - .env
    volumes:
      - ./data/postgresql:/var/lib/postgresql/data
      - ./postgresql:/docker-entrypoint-initdb.d 
    healthcheck:
      test: ["CMD-SHELL", "pg_isready","-d","${POSTGRES_DB}","-h","db","-U","${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  server:
    build:
      context: .
      dockerfile: ./docker/Dockerfile
    ports:
      - 3000:${DASHBOARD_PORT}    # admin dashboard
      - 8000:${API_PORT}          # api
      - 8001:${IO_PORT}           # socket.io
    env_file:
      - .env
    volumes:
      - ./data/server/logs:${LOGS_FOLDER_PATH}
      - ./data/server/security:${SECURITY_FOLDER_PATH}
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  redis:
    image: redis:latest
    container_name: ${REDIS_HOST}
    volumes:
      - ./data/redis:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
